#!/bin/sh /etc/rc.common
START=20

FIREWALL="/www/cgi-bin/firewall.sh"
if [ -f /tmp/modem ]; then
	WAN_IF=eth2
fi

# Input: IPA, IPB, NETMASK
# Return value: return true(0) if IPA and IPB are in dirrerent subnet, otherwise, return false(1) if in same subnet.
in_different_subnet(){
	num=0
	for i in $1 $2 $3; do
		num=`expr $num + 1`
		IP1=$(echo $i | cut -f1 -d ".")
		IP2=$(echo $i | cut -f2 -d ".")
		IP3=$(echo $i | cut -f3 -d ".")
		IP4=$(echo $i | cut -f4 -d ".")
		if [ $num -eq 1 ]; then
			IPN1=$IP1
			IPNA=$(((IP2<<16) + (IP3<<8) + IP4))
		elif [ $num -eq 2 ]; then
			IPN2=$IP1
			IPNB=$(((IP2<<16) + (IP3<<8) + IP4))
		elif [ $num -eq 3 ]; then
			IPN3=$IP1
			MASKN=$(((IP2<<16) + (IP3<<8) + IP4))
		fi
	done

	NETA=$((IPNA & MASKN))
	NETB=$((IPNB & MASKN))

	if [ $((IPN1 & IPN3)) -eq $((IPN2 & IPN3)) ] && [ $NETA -eq $NETB ]; then
		return 1
	else
		return 0
	fi
}


setup_interface_static_ip(){
    local mtu

    mtu=$($CONFIG get wan_dhcp_mtu)
    
    # For IPv6 Ready Log test, fixed ip setting do not enable radvd and dhcpv6s
    local wan6_type=`$CONFIG get ipv6_type`
    local logo_test=`$CONFIG get endis_ipv6_logo_test`
    if [ "x$logo_test" = "x1" -a "x$wan6_type" = "xfixed" ]; then
	ifconfig $WAN_IF mtu ${mtu:-1500}
    else
	ifconfig $WAN_IF down
	ifconfig $WAN_IF mtu ${mtu:-1500}
	ifconfig $WAN_IF up
    fi

    ifconfig $WAN_IF $($CONFIG get wan_ipaddr) netmask $($CONFIG get wan_netmask)
    if in_different_subnet $($CONFIG get wan_ipaddr) $($CONFIG get wan_gateway) $($CONFIG get wan_netmask); then
    	route add -net $($CONFIG get wan_gateway) netmask 255.255.255.255 dev $WAN_IF
    fi
    route add default gw $($CONFIG get wan_gateway)

    $FIREWALL restart

    # static route & ripd
    /sbin/cmdroute stop
    /usr/bin/killall -SIGINT ripd
    /sbin/cmdroute start
    /usr/sbin/ripd
    /sbin/cmdigmp stop
    /sbin/cmdigmp start

    /sbin/ledcontrol -n wan -c green -s on
    mkdir -p /tmp/traffic_meter
    #/sbin/cmd_traffic_meter config_update
    # if IP address re-assigned, we will check qos bandwidth.
    local qos_enable=`$CONFIG get qos_endis_on`
    local qos_bandwidth_enable=`$CONFIG get qos_threshold`
    local qos_bandwidth_type=`$CONFIG get qos_bandwidth_type`
    if [ "x$qos_enable" = "x1" -a "x$qos_bandwidth_enable" = "x1" ]; then
         if [ "x$qos_bandwidth_type" = "x1" ]; then
                /etc/bandcheck/band-check &
         fi
    fi

    # log for static mode when wan gets ip.
    local wan_log="[Internet connected] IP address: "$($CONFIG get wan_ipaddr)","
    /usr/bin/logger "$wan_log"
}

setup_interface_dhcp(){
    local mtu

    mtu=$($CONFIG get wan_dhcp_mtu)

    # For IPv6 Ready Log test, fixed ip setting do not enable radvd and dhcpv6s
    local wan6_type=`$CONFIG get ipv6_type`
    local logo_test=`$CONFIG get endis_ipv6_logo_test`
    if [ "x$logo_test" = "x1" -a "x$wan6_type" = "xfixed" ]; then
	ifconfig $WAN_IF mtu ${mtu:-1500}
    else
	ifconfig $WAN_IF down
	ifconfig $WAN_IF mtu ${mtu:-1500}
	ifconfig $WAN_IF up
    fi

    if [ "x$($CONFIG get wan_domain)" = "x" ];then
    	udhcpc -b -i $WAN_IF -h "$($CONFIG get wan_hostname)" -r $($CONFIG get wan_dhcp_ipaddr) -N $($CONFIG get wan_dhcp_oldip) &
    else
    	udhcpc -b -i $WAN_IF -h "$($CONFIG get wan_hostname)" -r $($CONFIG get wan_dhcp_ipaddr) -N $($CONFIG get wan_dhcp_oldip) -d $($CONFIG get wan_domain) &
    fi
    mkdir -p /tmp/traffic_meter
    #/sbin/cmd_traffic_meter config_update
}

setup_interface_mulpppoe(){
    echo "start multipppoe session1" > /dev/console

    mknod /dev/ppp c 180 0
    load_modules /etc/modules.d/60-pppoe-mod

    if [ ! -d /etc/ppp/peers ] ;then
        rm -rf /etc/ppp
        mkdir -p /etc/ppp/peers
    fi

    local manul=$($CONFIG get wan_endis_dod)

    # start session1 if it's not manully connect
    if [ "x$manul" != "x2" ] ;then
	    ppp-nas pppoe-session1 start
    fi

    # write static dns
    if [ "x$($CONFIG get wan_mulpppoe1_dns_assign)" = "x1" ];then
           local dns1=$($CONFIG get wan_ether_dns1)
           local dns2=$($CONFIG get wan_ether_dns2)
           if [ "x$dns1" != "x" ] ;then
		echo $dns1 > /etc/ppp/pppoe1-dns.conf
		echo "nameserver $dns1" > /tmp/resolv.conf
	   fi
           if [ "x$dns2" != "x" ] ;then
		echo $dns2 >> /etc/ppp/pppoe1-dns.conf
		echo "nameserver $dns2" >> /tmp/resolv.conf
	   fi
    fi

    local session2=$($CONFIG get wan_enable_session2)
    if [ "x$session2" != "x" ] ;then
	sleep 2
        echo "start multipppoe session2" > /dev/console
        ppp-nas pppoe-session2 start &
        touch /etc/ppp/enable_ppp1
	# write static dns
	if [ "x$($CONFIG get wan_mulpppoe2_dns_assign)" = "x1" ];then
		local dns3=$($CONFIG get wan_ether2_dns1)
		local dns4=$($CONFIG get wan_ether2_dns2)
		if [ "x$dns3" != "x" ] ;then
			echo $dns3 > /etc/ppp/pppoe2-dns.conf
			echo "nameserver $dns3" >> /tmp/resolv.conf
		fi
		if [ "x$dns4" != "x" ] ;then
			echo $dns4 >> /etc/ppp/pppoe2-dns.conf
			echo "nameserver $dns4" >> /tmp/resolv.conf
		fi
	fi
    fi
    /etc/init.d/dnsmasq restart
}

setup_wan_mac() {
    local mac

    mac="wan_factory_mac"
    if [ "$1" = "dhcp" -o "$1" = "static" ]; then
	value=$($CONFIG get wan_ether_mac_assign)

	if [ "$value" = "1" ]; then
	    mac="wan_remote_mac"
	elif [ "$value" = "2" ]; then
	    mac="wan_ether_this_mac"
	fi
    elif [ "$1" = "pptp" ]; then
	value=$($CONFIG get wan_pptp_mac_assign)

	if [ "$value" = "1" ]; then
	    mac="wan_remote_mac"
	elif [ "$value" = "2" ]; then
	    mac="wan_pptp_this_mac"
	fi
    elif [ "$1" = "bigpond" ]; then
	value=$($CONFIG get wan_bpa_mac_assign)

	if [ "$value" = "1" ]; then
	    mac="wan_remote_mac"
	elif [ "$value" = "2" ]; then
	    mac="wan_bpa_this_mac"
	fi
    elif [ "$1" = "pppoe" ]; then
	value=$($CONFIG get wan_pppoe_mac_assign)

        if [ "$value" = "1" ]; then
            mac="wan_remote_mac"
        elif [ "$value" = "2" ]; then
            mac="wan_pppoe_this_mac"
        fi
    elif [ "$1" = "l2tp" ]; then
        value=$($CONFIG get wan_l2tp_mac_assign)

        if [ "$value" = "1" ]; then
            mac="wan_remote_mac"
        elif [ "$value" = "2" ]; then
            mac="wan_l2tp_this_mac"
        fi
    fi

    mac_value=$($CONFIG get $mac)

    ifconfig $WAN_IF down
    ifconfig $WAN_IF hw ether $mac_value
    ifconfig $WAN_IF up
}

set_dst_flag() {
    $CONFIG set dstflag=0
    $CONFIG commit
}

attach_dni_qos_if_not_attached()
{
    # if dni-qos package is not installed, return 1
    type dni_qos >/dev/null 2>&1 || return 1

    # if dni-qos has attached to a NIF, return 2
    dni_qos >/dev/null 2>&1 && return 2

    # $WAN_IF is a VLAN NIF, the default txqueuelen is 0.
    # it should be assigned a reasonable value
    ip link set $WAN_IF txqueuelen 1000

    # attach dni_qos to $WAN_IF
    dni_qos --dni_qos_if $WAN_IF
}

set_dns() {
    echo "nameserver $($CONFIG get wan_ether_dns1)" > /tmp/resolv.conf
    [ "x$($CONFIG get wan_ether_dns2)" != "x" ] && \
    echo "nameserver $($CONFIG get wan_ether_dns2)" >> /tmp/resolv.conf
    [ "x$($CONFIG get wan_ether_dns3)" != "x" ] && \
    echo "nameserver $($CONFIG get wan_ether_dns3)" >> /tmp/resolv.conf
}

start() {
    local ns_flag=0
    local proto=$($CONFIG get wan_proto)
    traffic_month_limit=$($CONFIG get trafficmeter_monthly_limit_reached)
    traffic_block_all=$($CONFIG get traffic_block_all)
    firmware_region=`cat /tmp/firmware_region | awk '{print $1}'`
    local ru_feature=0
    if [ "x$firmware_region" = "xWW" ]||[ "x$firmware_region" = "x" ] ;then
	if [ "x$($CONFIG get GUI_Region)" = "xRussian" ] ;then
		ru_feature=1
	fi
    elif [ "x$firmware_region" = "xRU" ] ;then
	ru_feature=1
    fi

    attach_dni_qos_if_not_attached
    /sbin/ledcontrol -n wan -c amber -s on
    
    setup_wan_mac $proto

    #start qos
    /sbin/qos.sh start

    # Restart dnsmasq
    /etc/init.d/dnsmasq stop
    /etc/init.d/dnsmasq start

    if [ "$proto" = "pptp" -o "$proto" = "l2tp" ]; then
	    /etc/init.d/qca-nss-connmgr stop
    elif [ "x$($CONFIG get streamboost_enable)" = "x0" ]; then
	    /etc/init.d/qca-nss-connmgr start
    fi
    # Bring up the wan interface first time when sytem is Rebooted, it needs to wait 
    # for a moment after executing the command `ifconfig $WAN_IF up`, then `$WAN_IF`
    # PHY is up. 3 seconds MAY be acceptable, and it works.
    # If not wait, the `udhcpc` CAN'T obtain IP address in its selecting time.
    sleep 5

    include /lib/network

    [ "x$1" = "xmanually" ] && echo "********* The net-wan command is called manually!!! *********"

    case "$proto" in
	pppoe)
	. /lib/network/ppp.sh
	    #if traffic meter monthly limit is not reached or don't check "Disconnect and disable the Internet connection".
	    if [ "$traffic_month_limit" != "1" -o "$traffic_block_all" != "1" ]; then
               if [ "$($CONFIG get wan_pppoe_intranet_wan_assign)" = "0" ]; then
                        # Confiure the PPP parameters firstly, then started PPPD by UDHCPC
			setup_interface_ppp $1
			if [ "$ru_feature" = "1" ]; then
                        	udhcpc -b -i $WAN_IF
				# when intranet dns exists ,then append it
				cat /tmp/dhcpc_resolv.conf >> /tmp/resolv.conf
			fi
                else
                        if [ "$($CONFIG get wan_pppoe_intranet_wan_assign)" = "1" -a "$ru_feature" = "1" ]; then
                                netmask=$($CONFIG get wan_pppoe_intranet_mask)
				if [ "x$netmask" != "x" -a "x$netmask" != "x0.0.0.0" -a "x$netmask" != "x255.255.255.255" ]; then
                                        ifconfig $WAN_IF $($CONFIG get wan_pppoe_intranet_ip) netmask $netmask
				else
					ifconfig $WAN_IF $($CONFIG get wan_pppoe_intranet_ip)
                                fi
                        fi
                        setup_interface_ppp $1
                fi
                [ "$($CONFIG get wan_pppoe_dns_assign)" = "1" ] && ns_flag=1
            fi
        ;;
	pptp)
	. /lib/network/ppp.sh
	    #if traffic meter monthly limit is not reached or don't check "Disconnect and disable the Internet connection".
	    if [ "$traffic_month_limit" != "1" -o "$traffic_block_all" != "1" ]; then
   #             [ "$($CONFIG get wan_pptp_dns_assign)" = "1" ] && ns_flag=1 && set_dns
	        # Setup WAN Ethernet interface IP address
	        if [ "$($CONFIG get wan_pptp_wan_assign)" = "0" ]; then
	            # Confiure the PPP parameters firstly, then started PPPD by UDHCPC
	            setup_interface_ppp $1
		    udhcpc -b -i $WAN_IF
	        else
	            # Configure the interface address, then started PPPD in `setup_interface_ppp`
		    if [ "x$($CONFIG get wan_pptp_eth_mask)" != "x" ]; then
		        ifconfig $WAN_IF $($CONFIG get wan_pptp_local_ip) netmask $($CONFIG get wan_pptp_eth_mask)
		    else
		        ifconfig $WAN_IF $($CONFIG get wan_pptp_local_ip)
		    fi

		    setup_interface_ppp $1
	        fi
	    fi
	;;
	l2tp)
	. /lib/network/ppp.sh
    #            [ "$($CONFIG get wan_l2tp_dns_assign)" = "1" ] && ns_flag=1 && set_dns
		if [ "$($CONFIG get wan_l2tp_wan_assign)" = "0" ]; then
                    # Confiure the PPP parameters firstly, then started PPPD by UDHCPC
                    setup_interface_ppp $1
                    udhcpc -b -i $WAN_IF
                else
                    # Configure the interface address, then started PPPD in `setup_interface_ppp`
                    if [ "x$($CONFIG get wan_l2tp_eth_mask)" != "x" ]; then
                        ifconfig $WAN_IF $($CONFIG get wan_l2tp_local_ip) netmask $($CONFIG get wan_l2tp_eth_mask)
                    else
                        ifconfig $WAN_IF $($CONFIG get wan_l2tp_local_ip)
                    fi

                    setup_interface_ppp $1
                fi
        ;;
    static)
	    setup_interface_static_ip
	    ns_flag=1
		# If upgrade FW, need to update stremboost database
		sb_update_database
	;;
	bigpond)
	    #calling package/bpalogin/files/bigpond.sh
	    setup_interface_bigpond $1
	    [ "$($CONFIG get wan_bpa_dns_assign)" = "1" ] && ns_flag=1
	;;
	mulpppoe1)
	    #calling package/ppp-nas/files/mulpppoe.sh
	    setup_interface_mulpppoe
	;;
	*)
            [ "$($CONFIG get wan_ether_dns_assign)" = "1" ] && ns_flag=1 && set_dns
	    setup_interface_dhcp
        ;;
   esac

   [ "$ns_flag" = "1" ] && set_dns

   # Start NTP
   killall ntpclient
   sleep 1
   if [ "$($CONFIG get endis_ntp)" = "1" ]; then
	#ntpclient -h "$($CONFIG get ntpserver1)" -b "second_server=$($CONFIG get ntpserver2)" -i 15 -m 60 -p 123 -s
	/usr/sbin/ntpclient
   fi
   
   # Restart UPnP
   /sbin/cmdupnp restart

   # Restart DDNS
   /sbin/cmd_ddns restart

   $CONFIG set traffic_disable_wan=0

   # To fix bug24422: DUT should restart net6conf while for net-wan restart
   local wan6_type=$($CONFIG get ipv6_type)
   boot_status=`cat /tmp/boot_status`
   if [ "$boot_status" != "1" ]; then
	if [ "x$wan6_type" != "x" -a "$wan6_type" != "disabled" ]; then
		/etc/net6conf/net6conf restart
	fi
   fi

   # Restart crond. Refix bug 33773.
   if [ ! -f /tmp/boot_status ] ;then
        CRONTABS=/tmp/etc/crontabs
        sleep 1
        killall -9 crond
        crond -c $CRONTABS -T "$($CONFIG get time_zone)"
   fi

}

stop() {
	# Stop static route
	#/sbin/cmdroute stop

	/usr/bin/killall -SIGINT ripd

	# Shutdown and Kill all possible tasks
	killall ntpclient
	killall bpalogin

	# Because the ipv6 pppoe may be connecting.
	local ipv4_pppd=`ps | grep "pppd call dial-provider updetach" | grep -v "grep" |awk '{print $1}'`
	if [ "x$ipv4_pppd" != "x" ]; then
		/bin/kill -SIGHUP $ipv4_pppd
		/bin/kill $ipv4_pppd
	fi

	killall -SIGUSR2 udhcpc
	killall udhcpc
	killall udhcpc
	#killall ip-up
	#killall ip-down

	sleep 1

	/sbin/rmmod pptp
	/sbin/rmmod pppoe
	/sbin/rmmod pppox

	sleep 2
	/sbin/rmmod ppp_generic
	/sbin/rmmod slhc

	ifconfig $WAN_IF 0.0.0.0
	ifconfig $WAN_IF mtu 1500

	/sbin/ledcontrol -n wan -c amber -s on

	# Restart static route for LAN
	/sbin/cmdroute restart
	# log for static mode when wan disconnects.
	local wan_proto=$($CONFIG get wan_proto)
	[ "x$wan_proto" = "xstatic" ] && /usr/bin/logger "[Internet disconnected]"
	# stop the Ready Share Remote

	# stop multipppoe
        ppp-nas pppoe-session1 stop
        ppp-nas pppoe-session2 stop
        # Clear dns in /tmp/resolv.conf
        echo "" > /tmp/resolv.conf
        rm /etc/ppp/pppoe2-domain.conf
        rm /etc/ppp/enable_ppp1
}

restart() {
	stop
	set_dst_flag
	start $1
}
