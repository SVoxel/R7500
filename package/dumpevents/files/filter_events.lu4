--
-- KEYS: the key of the flow events list
-- ARGV: a list of event types to keep; events not listed will be discarded
-- ARGV: use '*' to disable filtering, in which case no events will be discarded
-- returns: json-formatted list of events
--
m4_include(`codec.lua')

-- our encoder/decoder object
-- decode_from_db: converts a single event in db storage format (currently csv)
--		   into a lua table
-- encode_to_json: converts a lua table containing a list of events into json
local xlate = { decode_from_db = csv_to_table,
		encode_to_json = table_to_json }
-- pull the event list
local events = redis.call('lrange', KEYS[1], 0, -1)
-- determine which event types to keep
local event_types = {}
for i,v in ipairs(ARGV) do
	event_types[v] = true
end
-- cycle through the events.  for each event, decode it,
-- determine if the event is a type we want to keep, and if
-- so store it encoded
local ret = {}
for i,e in ipairs(events) do
	local t = xlate.decode_from_db(e)
	if t and t['event'] and
		(event_types['*'] or event_types[t['event']]) then
		ret[#ret+1] = t
	end
end
return xlate.encode_to_json({events = ret})
