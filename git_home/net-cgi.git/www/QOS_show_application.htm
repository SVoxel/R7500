<% http_header("style/form.css", "/funcs.js", "/jquery-1.7.2.min.js", "/streamboost.js") %>
<% body_header("_bandwidth_usage", "", "") %>
<% start_netscan() %>
<style type="text/css">
.fl{float:left;}
.dd{clear:both;margin:7px 0;width:100%;height:20px;}
.outbar{border:0px;background:#fff;height:18px;width:65%;float:left;}
.inbar{height:18px;display:block;}
#up_down_img { background-image:url(/image/ookla_speed.jpg);background-repeat:no-repeat; width:300px; height:40px; font-weight:bold; font-size:15px; font-family:arial; }
#downlink_speed { position:relative; color:#ffffff; z-indent:2; left:45px; top:10px;}
#uplink_speed { position:relative; color:#ffffff; z-indent:3; left:115px; top:10px;}
</style>
<script language="javascript" type="text/javascript">


$.fn.band_width = function(options, totle) {
	var settings=options;
	var color="#00f";
	var container = jQuery(this);
	container.html('<dl id="linebar"></dl>');
	var study_voteCount=0;
	study_voteCount = parseFloat(totle).toFixed(2);
	var study_votestr="";
	var studyplay_present=(settings[0].data/study_voteCount*100).toFixed(2);
	if(studyplay_present>100.00)
		studyplay_present=100.00;
	if(studyplay_present>90.00)
		color="#f00";
	else
		color="#00f";
	study_votestr += '<dd class="dd"><div class="outbar"><div class="inbar" style="width:'+studyplay_present+'%;background:'+color+';"></div></div><div class="fl">&nbsp;&nbsp;&nbsp;&nbsp;'+settings[0].data+'Mbps</div></dd>';
	container.find('#linebar').html(study_votestr);
}

<% list_access_control_device() %>
//<!--% list_device_flows() %-->

var device_mac_addr="<% cfg_get("device_mac_addr") %>".toUpperCase();
var an_router_flag = parent.an_router_flag;
var enable_block_device="<% cfg_get("enable_block_device") %>";
var bandwidth_type="<% cfg_get("bandwidth_type") %>";

var uplimit="<% cfg_get("uplimit") %>";
var downlimit="<% cfg_get("downlimit") %>";
var ookla_uplimit="<% cfg_get("ookla_uplimit") %>";
var ookla_downlimit="<% cfg_get("ookla_downlimit") %>";
var show_uplimit="";
var show_downlimit="";

if(bandwidth_type == "0") {
	show_uplimit=ookla_uplimit;
	show_downlimit=ookla_downlimit;
} else {
	show_uplimit=uplimit;
	show_downlimit=downlimit;
}

var uplink_value=show_uplimit*8/1000000;
if(uplink_value==0)
	uplink_value=1000.00;

var downlink_value=show_downlimit*8/1000000;
if(downlink_value==0)
	downlink_value=1000.00;

function show_wlan_ssid(name)
{
	var wlan_ssid="";
	if(name=="wired")
		wlan_ssid="";
	else if(name=="primary")
		wlan_ssid="<br>@wlan_guest_ssid: "+wl_ssid;
	else if(name=="guest")
		wlan_ssid="<br>@wlan_guest_ssid: "+wlgl_ssid;
	else if(name=="primary_an")
		wlan_ssid="<br>@wlan_guest_ssid: "+wla_ssid;
	else if(name=="guest_an")
		wlan_ssid="<br>@wlan_guest_ssid: "+wlal_ssid;
	else
		wlan_ssid="";
	return wlan_ssid;
}

function loadvalue()
{
	if(access_control_device_num < 1 )
	{
		setTimeout("location.reload()", 6000);
		return;
	}

	if(enable_block_device == "0")
	{
		document.getElementById("aorb_status").style.display = "none";
		document.getElementById("aorb_content").style.display = "none";
	} else {
		document.getElementById("aorb_status").style.display = "";
		document.getElementById("aorb_content").style.display = "";
	}
	getTraffic();
}

var xmlHttp;
function getTraffic()
{
	tHttp = createXMLHttpRequest();

	tHttp.onreadystatechange = function()
	{
		if(tHttp.readyState == 4 && tHttp.status == 200)
		{
			var jobj = eval('('+tHttp.responseText+')');
			updateInfomation(jobj);
		}
	}
	var dmac=device_mac_addr.toLowerCase()
	var url = "/cgi-bin/ozker/api/flows?mac="+dmac+"&ts="+ new Date().getTime();
	tHttp.open("GET",url,true);
	tHttp.send(null);
	setTimeout("getTraffic()", 3000);
}



var byUidFlows={};
function flow(uid, mac, name, epoch, down_bytes, up_bytes)
{
	this.uid = uid;
	this.mac = mac;
	this.name = name;
	this.epoch = epoch;
	this.down_bytes = down_bytes;
	this.up_bytes = up_bytes;
	this.down_rate=0.00;
	this.up_rate=0.00;
	this.update_flow=update_flow;
	this.not_update=0;
	//this.not_update_num=0;
	this.check_update_status = check_update_status;

	function check_update_status()
	{
		// if not update, add 0.00, and get average data.
		if(this.not_update == 1)
		{
			
		}
	}
	
	function update_flow(mac, name, epoch, down_bytes, up_bytes)
	{
		var dtime = parseFloat(epoch) - parseFloat(this.epoch)
		if(dtime != 0 )
		{
			this.down_rate = (((parseFloat(down_bytes) - parseFloat(this.down_bytes))/dtime)*8/1000000).toFixed(2);
			this.up_rate = (((parseFloat(up_bytes) - parseFloat(this.up_bytes))/dtime)*8/1000000).toFixed(2);
			this.not_update=0;
			this.not_update_num=0;
		}
		this.mac = mac;
		this.name = name;
		this.epoch = epoch;
		this.down_bytes = down_bytes;
		this.up_bytes = up_bytes;
	}
}

var byNameApps={};
function application(name)
{
	this.name = name;
	this.down_rate = 0.00;
	this.up_rate = 0.00;
	this.show_sub=0;
	this.show_count=0;

	this.update_rate = update_rate;
	this.set_show_sub = set_show_sub;
	this.clear_rate=clear_rate;

	function update_rate(d_rate, u_rate)
	{
		sum_rate(this, d_rate, u_rate);
		if(this.down_rate > 0 || this.up_rate > 0 )
			this.show_count=0;
	}
	
	function clear_rate()
	{
		this.down_rate=0.00;
		this.up_rate=0.00		
	}
	
	function set_show_sub(value)
	{
		this.show_sub=value;
	}
}

function sum_rate( e, d_rate, u_rate) 
{
	if(e.down_rate != undefined && e.up_rate != undefined)
	{
		e.down_rate = parseFloat(e.down_rate)+parseFloat(d_rate)
		e.up_rate = parseFloat(e.up_rate)+parseFloat(u_rate)
	}
}

function updateInfomation(jobj)
{
	for(var name in byNameApps)
		byNameApps[name].clear_rate();

	for(var  i in jobj.flows)
	{
		data = jobj.flows[i]
		
		var name=data.group;
		if(name === undefined)
			name=data.name;
		name=applicationNames[name];
		if(name === undefined)
			name=applicationNames["default"];
		var uid = data.uid;
		var mac = data.mac.toLowerCase();
		
		if( byUidFlows[uid] === undefined )
			byUidFlows[uid] = new flow(uid, mac, name, data.epoch, data.down_bytes, data.up_bytes);
		else
			byUidFlows[uid].update_flow(mac, name, data.epoch, data.down_bytes, data.up_bytes);
		
		var f = byUidFlows[uid];
		
		if( ! byNameApps[f.name] )
			byNameApps[f.name] = new application(f.name);
		byNameApps[f.name].update_rate(f.down_rate, f.up_rate);		
	}
	update_flows();
}
var dev_down_totle=0.00;
var dev_up_totle=0.00;
function update_flows()
{
	var app_num=0;
	dev_down_totle=0.00;
	dev_up_totle=0.00;
	$("#application_flows").empty();
	for(var name in byNameApps)
	{
	
		var showstr="";
		var a = byNameApps[name];
		var downRate=parseFloat(a.down_rate).toFixed(2);
		var upRate=parseFloat(a.up_rate).toFixed(2);

		if(downRate < 0.01 && upRate < 0.01)
		{
			if(a.show_count > 2)
				continue;
			a.show_count++;
		}

		dev_down_totle=(parseFloat(dev_down_totle)+parseFloat(downRate)).toFixed(2);
		dev_up_totle=(parseFloat(dev_up_totle)+parseFloat(upRate)).toFixed(2);

		showstr='<TR><td nowrap align=center class=subhead>'+name+'</td>';
		showstr=showstr+"<td nowrap><input type='hidden' value="+downRate+"><div name='app_down"+app_num+"'></div></td><td nowrap><input type='hidden' value="+upRate+"><div name='app_up"+app_num+"'></div></td></TR>";
		$('#application_flows').append(showstr);
		$("div[name=app_down"+app_num+"]").band_width([{"data":downRate}],downlink_value);
		$("div[name=app_up"+app_num+"]").band_width([{"data":upRate}],downlink_value);
		app_num++;
	}
	$("#y").band_width([{"data":dev_down_totle}],downlink_value);
	$("#z").band_width([{"data":dev_up_totle}],downlink_value);	
	
	if(app_num > 0) {
		var TableSorter = new TSorter(2);
		TableSorter.init('tableSort_app');
		TableSorter.def_sort('tableSort_app', 1);
	}
}


</script>
<div class="page_title">@device_bands</div>
<div id="main" class="main">
<% table_header() %>
<TR><td colspan=3><img src=/liteblue.gif width=100% height=12></td></TR>
<TR>
	<TD nowrap colspan=2 align=left id="up_down_img">
	<script>
		if(show_uplimit == "" || show_downlimit == "")
			document.write("<span id=downlink_speed>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Mbps</span><span id=uplink_speed>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Mbps</span>");
		else
			document.write("<span id=downlink_speed>"+parseFloat(show_downlimit*8/1000000).toFixed(2)+" Mbps</span><span id=uplink_speed>"+parseFloat(show_uplimit*8/1000000).toFixed(2)+" Mbps</span>");
	</script>
	</TD>
	<TD nowrap align=right>
	<input class="common_bt" type='button' name='refresh' value='@refresh_mark' onClick='location.href="QOS_application.htm";'>
	</TD>
</TR>
<TR>
	<TD nowrap colspan=3>
		<TABLE class=tables border=1 cellpadding=2 cellspacing=0 width=100% id="tableSort">
			<thead>
			<TR class=table_header>
			<TD align=center width=5% id="aorb_status" style="display:none;">@stalist_Status</TD>
			<TD align=center width=8%>@qos_devpriority</TD>
			<TD align=center width=10%>@trigger_contype</TD>
			<TD align=center>@lan_mark_name</TD>
			<TD width=26%><table><tr><td width=15%><img src="/image/down_arrow.png" width="23px;" height="23px;" /></td><td align=center>@bandwidth_down</td></tr></table></TD>
			<TD width=26%><table><tr><td width=15%><img src="/image/up_arrow.png" width="23px;" height="23px;" /></td><td align=center>@bandwidth_up</td></tr></table></TD>
			</TR>
			</thead>
			<script>
				var cf=document.forms[0];
				var ip_str="-";
				var name_str="-";
				var device_count=0;

				if(access_control_device_num > 0)
				{
					for(i=0;i<access_control_device_num;i++)
					{
						var str = eval ( 'access_control_device' + i );
						var str_name = eval ( 'access_control_device_name' + i );
						var each_info = str.split("*");
						device_count++;

						if(str_name=="")
							name_str="-";
						else
							name_str=str_name.replace(/[ ]/g, "&nbsp;");

						if(each_info[1]=="")
							ip_str="-";
						else
							ip_str=each_info[1];

						if(device_mac_addr == each_info[2])
						{
							document.write('<tr><td align=center id=aorb_content style="display:none;">'+show_bora(each_info[0])+'</td>');
							document.write("<td align=center>"+show_priority(each_info[4])+"</td>");
							document.write("<td align=center>"+show_type(each_info[3])+"</td>");
							document.write('<td class=device_name valign=middle title="@qos_mac: '+each_info[2]+'&#13@device_type: '+show_icon_name(each_info[5])+show_wlan_ssid(each_info[3])+'"><table width=100%><tr><td width=50%>');
							document.write(device_icon(each_info[5]));
							document.write('</td><td align=right>'+name_str+'<br />'+ip_str+'</td></tr></table></td>');
							document.write("<td nowrap><div id=y></div></td><td nowrap><div id=z></div></td></TR>");
							$("#y").band_width([{"data":dev_down_totle}],downlink_value);
							$("#z").band_width([{"data":dev_up_totle}],downlink_value);
						}
					}
				}
			</script>
		</TABLE>
	</TD>
</TR>
<TR>
	<TD>&nbsp;&nbsp;</TD>
</TR>
<TR>
	<TD nowrap colspan=3>
		<TABLE class=tables border=1 cellpadding=2 cellspacing=0 width=100% id="tableSort_app">
			<thead>
			<TR class=table_header>
			<TH nowrap align=center width=30% class="subhead">@app_title</TH>
			<TH nowrap align=center width=35% abbr="float_text"><a href="#" class="subhead_acc_control">@app_down</a></TH>
			<TH nowrap align=center width=35% abbr="float_text"><a href="#" class="subhead_acc_control">@app_up</a></TH>
			</TR>
			</thead>
			<tbody id="application_flows">

			</tbody>
		</TABLE>
	</TD>
</TR>
<TR>
	<TD>&nbsp;&nbsp;</TD>
</TR>
<TR>
	<TD nowrap colspan=3 align=center>
		<input class="common_bt" type='button' name='back' value='@back_mark' onClick='location.href="QOS_device.htm";'>
	</TD>
</TR>
</TABLE>
</div>
<% help_box("0","_bandwidth_usage") %>
</form>
</BODY>
</HTML>

